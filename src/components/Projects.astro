---
import GitHub from "./icons/projects-icons/GitHub.astro";
import Django from "./icons/projects-icons/Django.astro";
import Tailwind from "./icons/projects-icons/Tailwind.astro";
import React from "./icons/projects-icons/React.astro";
import Python from "./icons/projects-icons/Python.astro";
import TypeScript from "./icons/projects-icons/TypeScript.astro";
import PostgreSQL from "./icons/projects-icons/PostgreSQL.astro";
import Docker from "./icons/projects-icons/Docker.astro";
import AWS from "./icons/projects-icons/AWS.astro";
import Cloudflare from "./icons/projects-icons/Cloudflare.astro";
import Link from "./icons/Link.astro";
import LinkButton from "./LinkButton.astro";
import Image from "astro/components/Image.astro";
import WordPress from "./icons/projects-icons/WordPress.astro";
import ACF from "./icons/projects-icons/ACF.astro";

const TAGS = {
    DJANGO: {
        name: "Django",
        class: "text-black dark:text-white bg-[#44b78b]/25 border border-[#44b78b] backdrop-blur",
        icon: Django,
    },
    TAILWIND: {
        name: "Tailwind CSS",
        class: "text-black dark:text-white bg-[#003159]/25 border border-[#003159] backdrop-blur",
        icon: Tailwind,
    },
    REACT: {
        name: "React",
        class: "text-black dark:text-white bg-[#61DAFB]/25 border border-[#61DAFB] backdrop-blur",
        icon: React,
    },
    PYTHON: {
        name: "Python",
        class: "text-black dark:text-white bg-[#FFC331]/25 border border-[#FFC331] backdrop-blur",
        icon: Python,
    },
    TYPESCRIPT: {
        name: "TypeScript",
        class: "text-black dark:text-white bg-[#007ACC]/25 border border-[#007ACC] backdrop-blur",
        icon: TypeScript,
    },
    POSTGRESQL: {
        name: "PostgreSQL",
        class: "text-black dark:text-white bg-[#336791]/25 border border-[#336791] backdrop-blur",
        icon: PostgreSQL,
    },
    DOCKER: {
        name: "Docker",
        class: "text-black dark:text-white bg-[#2496ED]/25 border border-[#2496ED] backdrop-blur",
        icon: Docker,
    },
    AWS: {
        name: "AWS",
        class: "text-black dark:text-white bg-[#232F3E]/25 dark:bg-gray-200/25 border border-[#232F3E] dark:border-gray-500 backdrop-blur",
        icon: AWS,
    },
    CLOUDFLARE: {
        name: "Cloudflare",
        class: "text-black dark:text-white bg-[#F38020]/25 border border-[#F38020] backdrop-blur",
        icon: Cloudflare,
    },
    ACF: {
        name: "Advanced Custom Fields",
        class: "text-black dark:text-white bg-[#2496ED]/25 border border-[#2496ED] backdrop-blur",
        icon: ACF,
    },
};
const PROJECTS = [
    {
        title: "PandaShop",
        desc1: "This is not the real project is just an example of the personal project I am working on. I designed and implemented an eCommerce website using Django REST framework for the backend and React for the frontend.",
        desc2: "The project includes features such as product listings, user authentication, and shopping cart functionality. To ensure scalability and performance, I deployed the application on an AWS EC2 instance and leveraged Cloudflare for secure and efficient content delivery.",
        desc3: "I continue working on the project to implement more functionalities to make it more attractive and be able to offer it to businesses near the area where I live that only have a physical store and are looking for ways to take their business online.",
        link: "https://pandashop.deyleraf.dev/",
        github: "https://github.com/DeylerAF/ecommerce-django-react-example",
        image: "/images/projects/PandaShop.webp",
        tags: [
            TAGS.PYTHON,
            TAGS.TYPESCRIPT,
            TAGS.DJANGO,
            TAGS.REACT,
            TAGS.TAILWIND,
            TAGS.POSTGRESQL,
            TAGS.AWS,
            TAGS.CLOUDFLARE,
            TAGS.DOCKER,
        ],
    },
    {
        title: "PandaShop",
        desc1: "This is not the real project is just an example of the personal project I am working on. I designed and implemented an eCommerce website using Django REST framework for the backend and React for the frontend.",
        desc2: "The project includes features such as product listings, user authentication, and shopping cart functionality. To ensure scalability and performance, I deployed the application on an AWS EC2 instance and leveraged Cloudflare for secure and efficient content delivery.",
        desc3: "I continue working on the project to implement more functionalities to make it more attractive and be able to offer it to businesses near the area where I live that only have a physical store and are looking for ways to take their business online.",
        link: "https://pandashop.deyleraf.dev/",
        github: "https://github.com/DeylerAF/ecommerce-django-react-example",
        image: "/images/projects/PandaShop.webp",
        tags: [
            TAGS.ACF,
            TAGS.TYPESCRIPT,
            TAGS.DJANGO,
            TAGS.REACT,
            TAGS.TAILWIND,
            TAGS.POSTGRESQL,
            TAGS.AWS,
            TAGS.CLOUDFLARE,
            TAGS.DOCKER,
        ],
    },
];
---

<div class="flex flex-col gap-y-16">
    {
        PROJECTS.map(
            ({ image, title, desc1, desc2, desc3, tags, link, github }) => (
                <article class="flex flex-col md:flex-row gap-4">
                    <div class="w-full md:w-1/2">
                        <div class="relative flex flex-col items-center translate-y-2 col-span-6 row-span-5 gap-8 transition duration-500 ease-in-out transform overflow-clip rounded-xl sm:rounded-xl md:border md:border-lime-600/50 md:hover:border-lime-500/75 md:bg-lime-600/10 md:hover:bg-lime-600/20 md:backdrop-blur">
                            <Image
                                width={300}
                                height={300}
                                src={image}
                                alt="PandaShop"
                                class="object-cover object-top w-full transition duration-500 md:hover:scale-105"
                                style="object-position: 50% 50%"
                                loading={"eager"}
                            />
                        </div>
                    </div>

                    <div class="w-full md:w-1/2 md:max-w-lg m-0">
                        <h3 class="text-2xl font-bold text-gray-800 dark:text-gray-100">
                            {title}
                        </h3>
                        <div class="flex flex-wrap mt-2">
                            <ul class="flex flex-wrap mb-2 gap-2">
                                {tags.map((tag) => (
                                    <li>
                                        <span
                                            class={`flex gap-x-2 rounded-full text-xs ${tag.class} py-1 px-2 `}
                                        >
                                            <tag.icon class="size-4" />
                                            {tag.name}
                                        </span>
                                    </li>
                                ))}
                            </ul>

                            <div class="flex flex-col gap-y-2 mt-2 text-black dark:text-white/80">
                                <div class="leading-relaxed">
                                    <p>{desc1}</p>
                                    <span class="hidden" id="more-text">
                                        <p>{desc2}</p>
                                        <p>{desc3}</p>
                                    </span>
                                    <button
                                        id="toggle-btn"
                                        class=" text-lime-600 dark:text-lime-400 focus:outline-none"
                                    >
                                        Read More
                                    </button>
                                    <button
                                        id="hide-btn"
                                        class="hidden text-lime-600 dark:text-lime-400 focus:outline-none"
                                    >
                                        Read Less
                                    </button>
                                </div>
                            </div>
                            <footer class="flex items-end justify-start mt-4 gap-x-4">
                                {github && (
                                    <LinkButton href={github}>
                                        <GitHub class="size-6" />
                                        Code
                                    </LinkButton>
                                )}
                                {link && (
                                    <LinkButton href={link}>
                                        <Link class="size-4" />
                                        Preview
                                    </LinkButton>
                                )}
                            </footer>
                        </div>
                    </div>
                </article>
            ),
        )
    }

    <script is:inline>
        const moreTextEl = document.getElementById("more-text");
        const toggleBtnEl = document.getElementById("toggle-btn");
        const hideBtnEl = document.getElementById("hide-btn");

        toggleBtnEl.addEventListener("click", () => {
            moreTextEl.classList.toggle("hidden");
            toggleBtnEl.classList.toggle("hidden");
            hideBtnEl.classList.toggle("hidden");
        });

        hideBtnEl.addEventListener("click", () => {
            moreTextEl.classList.toggle("hidden");
            toggleBtnEl.classList.toggle("hidden");
            hideBtnEl.classList.toggle("hidden");
        });
    </script>
</div>
